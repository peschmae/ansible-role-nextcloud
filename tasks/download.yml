---
- name: "Install unzip if needed"
  package:
    name: unzip
    state: present
  when: nextcloud_archive_format == "zip" or 'zip' in nextcloud_download_url.split('.')[-1:]

- name: "Install bunzip2 if needed"
  package:
    name: bzip2
    state: present
  when: nextcloud_archive_format == "tar.bz2" or 'bz2' in nextcloud_download_url.split('.')[-1:]

- name: "Define full download url"
  set_fact:
    nextcloud_download_url: "{{ (nextcloud_download_url, nextcloud_archive_format) | join('.') }}"
  when:
    # assuming the user set a custom download url
    - "'zip' not in nextcloud_download_url.split('.')[-1:]"
    - "'bz2' not in nextcloud_download_url.split('.')[-1:]"

- name: "Create nextcloud_directory with proper permissions"
  file:
    path: "{{ nextcloud_directory }}"
    mode: "u=rwX,g=rX,o-rwx"
    recurse: True
    state: directory
    owner: "{{ nextcloud_owner }}"
    group: "{{ nextcloud_group }}"

- block:
  - name: "Download & extract Nextcloud to /tmp"
    unarchive:
      copy: False
      src: "{{ nextcloud_download_url }}"
      dest: "/tmp/"

  - name: "Move extracted files to {{ nextcloud_directory }}"
    copy:
      src: "/tmp/nextcloud/"
      dest: "{{ nextcloud_directory }}"
      remote_src: True

  - name: "Cleanup nextcloud downloads"
    file:
      path: /tmp/nextcloud
      state: absent