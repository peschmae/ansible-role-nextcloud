---
- name: Create updater.secret
  ansible.builtin.command: "{{ nextcloud_php_executable }} -r 'echo password_hash(\"{{ nextcloud_updatesecret }}\", PASSWORD_DEFAULT);'"
  register: nextcloud_updatesecret_hashed_tmp
  changed_when: false

- name: Debug nextcloud_updatesecret_hashed
  ansible.builtin.debug:
    var: nextcloud_updatesecret_hashed_tmp
    verbosity: 2

- name: Set hashed updater.secret
  ansible.builtin.set_fact:
    nextcloud_updatesecret_hashed: "{{ nextcloud_updatesecret_hashed_tmp.stdout }}"

- name: Debug nextcloud_updatesecret_hashed
  ansible.builtin.debug:
    var: nextcloud_updatesecret_hashed
    verbosity: 2

- name: Create additional nextcloud configurations
  ansible.builtin.template:
    src: "{{ nextcloud_configuration_template }}"
    dest: "{{ nextcloud_configuration_override }}"
    mode: u=rwX,g=rX,o-rwx
    owner: "{{ nextcloud_owner }}"
    group: "{{ nextcloud_group }}"
    validate: php -l %s

- name: Create default cronjob
  ansible.builtin.cron:
    name: nextcloud default cronjob
    state: "{{ 'present' if nextcloud_cronjob.enabled else 'absent' }}"
    user: "{{ nextcloud_owner }}"
    cron_file: nextcloud
    minute: "{{ nextcloud_cronjob.schedule.split(' ')[0] }}"
    hour: "{{ nextcloud_cronjob.schedule.split(' ')[1] }}"
    day: "{{ nextcloud_cronjob.schedule.split(' ')[2] }}"
    month: "{{ nextcloud_cronjob.schedule.split(' ')[3] }}"
    weekday: "{{ nextcloud_cronjob.schedule.split(' ')[4] }}"
    job: "{{ nextcloud_php_executable }} {{ nextcloud_directory }}/cron.php"

- name: Create additional cronjobs
  ansible.builtin.cron:
    name: "{{ item.name }}"
    state: "{{ 'present' if item.enabled else 'absent' }}"
    user: "{{ nextcloud_owner }}"
    cron_file: nextcloud_additional
    minute: "{{ item.schedule.split(' ')[0] }}"
    hour: "{{ item.schedule.split(' ')[1] }}"
    day: "{{ item.schedule.split(' ')[2] }}"
    month: "{{ item.schedule.split(' ')[3] }}"
    weekday: "{{ item.schedule.split(' ')[4] }}"
    job: "{{ item.command }}"
  with_items: "{{ nextcloud_cronjob_additional }}"

- block:
    - name: Check if logrotate exists
      ansible.builtin.command: logrotate --version
      register: nextcloud_check_logrotate
      changed_when: false
      failed_when: nextcloud_check_logrotate.rc != 0

    - name: Create logrotate config for nextcloud logs
      ansible.builtin.template:
        src: "{{ nextcloud_log_rotate.template }}"
        dest: "{{ nextcloud_log_rotate.dest }}"
        owner: root
        group: root
        mode: 0644
  rescue:
    - name: Logrotate enabled, but package not present
      ansible.builtin.debug:
        msg: Tried to create the logroate config, but no package named logrotate is installed
  when: nextcloud_log_rotate_enabled
